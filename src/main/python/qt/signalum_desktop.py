# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file './signalum_desktop.ui'
#
# Created by: PyQt5 UI code generator 5.12.1
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(756, 630)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout.setObjectName("verticalLayout")
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setStyleSheet("")
        self.tabWidget.setObjectName("tabWidget")
        self.adapterTab = QtWidgets.QWidget()
        self.adapterTab.setObjectName("adapterTab")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.adapterTab)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.label_3 = QtWidgets.QLabel(self.adapterTab)
        self.label_3.setObjectName("label_3")
        self.verticalLayout_2.addWidget(self.label_3)
        self.bluetoothAdapterTable = QtWidgets.QTableWidget(self.adapterTab)
        self.bluetoothAdapterTable.setObjectName("bluetoothAdapterTable")
        self.bluetoothAdapterTable.setColumnCount(2)
        self.bluetoothAdapterTable.setRowCount(7)
        item = QtWidgets.QTableWidgetItem()
        self.bluetoothAdapterTable.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.bluetoothAdapterTable.setVerticalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.bluetoothAdapterTable.setVerticalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.bluetoothAdapterTable.setVerticalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.bluetoothAdapterTable.setVerticalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.bluetoothAdapterTable.setVerticalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.bluetoothAdapterTable.setVerticalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        self.bluetoothAdapterTable.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.bluetoothAdapterTable.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        item.setFlags(QtCore.Qt.ItemIsDragEnabled|QtCore.Qt.ItemIsUserCheckable|QtCore.Qt.ItemIsEnabled)
        self.bluetoothAdapterTable.setItem(0, 0, item)
        item = QtWidgets.QTableWidgetItem()
        item.setFlags(QtCore.Qt.ItemIsDragEnabled|QtCore.Qt.ItemIsUserCheckable|QtCore.Qt.ItemIsEnabled)
        self.bluetoothAdapterTable.setItem(1, 0, item)
        item = QtWidgets.QTableWidgetItem()
        item.setFlags(QtCore.Qt.ItemIsDragEnabled|QtCore.Qt.ItemIsUserCheckable|QtCore.Qt.ItemIsEnabled)
        self.bluetoothAdapterTable.setItem(2, 0, item)
        item = QtWidgets.QTableWidgetItem()
        item.setFlags(QtCore.Qt.ItemIsDragEnabled|QtCore.Qt.ItemIsUserCheckable|QtCore.Qt.ItemIsEnabled)
        self.bluetoothAdapterTable.setItem(3, 0, item)
        item = QtWidgets.QTableWidgetItem()
        item.setFlags(QtCore.Qt.ItemIsDragEnabled|QtCore.Qt.ItemIsUserCheckable|QtCore.Qt.ItemIsEnabled)
        self.bluetoothAdapterTable.setItem(4, 0, item)
        item = QtWidgets.QTableWidgetItem()
        item.setFlags(QtCore.Qt.ItemIsDragEnabled|QtCore.Qt.ItemIsUserCheckable|QtCore.Qt.ItemIsEnabled)
        self.bluetoothAdapterTable.setItem(5, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.bluetoothAdapterTable.setItem(6, 0, item)
        self.bluetoothAdapterTable.horizontalHeader().setDefaultSectionSize(200)
        self.bluetoothAdapterTable.horizontalHeader().setStretchLastSection(False)
        self.bluetoothAdapterTable.verticalHeader().setVisible(False)
        self.verticalLayout_2.addWidget(self.bluetoothAdapterTable)
        self.label = QtWidgets.QLabel(self.adapterTab)
        self.label.setObjectName("label")
        self.verticalLayout_2.addWidget(self.label)
        self.wifiAdapterTable = QtWidgets.QTableWidget(self.adapterTab)
        self.wifiAdapterTable.setObjectName("wifiAdapterTable")
        self.wifiAdapterTable.setColumnCount(2)
        self.wifiAdapterTable.setRowCount(7)
        item = QtWidgets.QTableWidgetItem()
        self.wifiAdapterTable.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.wifiAdapterTable.setVerticalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.wifiAdapterTable.setVerticalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.wifiAdapterTable.setVerticalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.wifiAdapterTable.setVerticalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.wifiAdapterTable.setVerticalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.wifiAdapterTable.setVerticalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        self.wifiAdapterTable.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.wifiAdapterTable.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        item.setFlags(QtCore.Qt.ItemIsDragEnabled|QtCore.Qt.ItemIsUserCheckable|QtCore.Qt.ItemIsEnabled)
        self.wifiAdapterTable.setItem(0, 0, item)
        item = QtWidgets.QTableWidgetItem()
        item.setFlags(QtCore.Qt.ItemIsDragEnabled|QtCore.Qt.ItemIsUserCheckable|QtCore.Qt.ItemIsEnabled)
        self.wifiAdapterTable.setItem(1, 0, item)
        item = QtWidgets.QTableWidgetItem()
        item.setFlags(QtCore.Qt.ItemIsDragEnabled|QtCore.Qt.ItemIsUserCheckable|QtCore.Qt.ItemIsEnabled)
        self.wifiAdapterTable.setItem(2, 0, item)
        item = QtWidgets.QTableWidgetItem()
        item.setFlags(QtCore.Qt.ItemIsDragEnabled|QtCore.Qt.ItemIsUserCheckable|QtCore.Qt.ItemIsEnabled)
        self.wifiAdapterTable.setItem(3, 0, item)
        item = QtWidgets.QTableWidgetItem()
        item.setFlags(QtCore.Qt.ItemIsDragEnabled|QtCore.Qt.ItemIsUserCheckable|QtCore.Qt.ItemIsEnabled)
        self.wifiAdapterTable.setItem(4, 0, item)
        item = QtWidgets.QTableWidgetItem()
        item.setFlags(QtCore.Qt.ItemIsDragEnabled|QtCore.Qt.ItemIsUserCheckable|QtCore.Qt.ItemIsEnabled)
        self.wifiAdapterTable.setItem(5, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.wifiAdapterTable.setItem(6, 0, item)
        self.wifiAdapterTable.horizontalHeader().setDefaultSectionSize(200)
        self.wifiAdapterTable.horizontalHeader().setStretchLastSection(False)
        self.wifiAdapterTable.verticalHeader().setVisible(False)
        self.verticalLayout_2.addWidget(self.wifiAdapterTable)
        self.tabWidget.addTab(self.adapterTab, "")
        self.graphTab = QtWidgets.QWidget()
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(190, 190, 190))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        self.graphTab.setPalette(palette)
        self.graphTab.setObjectName("graphTab")
        self.verticalLayout_7 = QtWidgets.QVBoxLayout(self.graphTab)
        self.verticalLayout_7.setObjectName("verticalLayout_7")
        self.widget = QtWidgets.QWidget(self.graphTab)
        self.widget.setStyleSheet("")
        self.widget.setObjectName("widget")
        self.verticalLayout_8 = QtWidgets.QVBoxLayout(self.widget)
        self.verticalLayout_8.setObjectName("verticalLayout_8")
        self.verticalLayout_6 = QtWidgets.QVBoxLayout()
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.label_4 = QtWidgets.QLabel(self.widget)
        self.label_4.setObjectName("label_4")
        self.verticalLayout_6.addWidget(self.label_4)
        self.line_2 = QtWidgets.QFrame(self.widget)
        self.line_2.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_2.setObjectName("line_2")
        self.verticalLayout_6.addWidget(self.line_2)
        self.wifiGraphLayout = QtWidgets.QVBoxLayout()
        self.wifiGraphLayout.setObjectName("wifiGraphLayout")
        self.verticalLayout_6.addLayout(self.wifiGraphLayout)
        self.wifiGraphToolbar = QtWidgets.QVBoxLayout()
        self.wifiGraphToolbar.setObjectName("wifiGraphToolbar")
        self.verticalLayout_6.addLayout(self.wifiGraphToolbar)
        self.line_4 = QtWidgets.QFrame(self.widget)
        self.line_4.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_4.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_4.setObjectName("line_4")
        self.verticalLayout_6.addWidget(self.line_4)
        self.label_5 = QtWidgets.QLabel(self.widget)
        self.label_5.setObjectName("label_5")
        self.verticalLayout_6.addWidget(self.label_5)
        self.line = QtWidgets.QFrame(self.widget)
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.verticalLayout_6.addWidget(self.line)
        self.bluetoothGraphLayout = QtWidgets.QVBoxLayout()
        self.bluetoothGraphLayout.setObjectName("bluetoothGraphLayout")
        self.verticalLayout_6.addLayout(self.bluetoothGraphLayout)
        self.line_3 = QtWidgets.QFrame(self.widget)
        self.line_3.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_3.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_3.setObjectName("line_3")
        self.verticalLayout_6.addWidget(self.line_3)
        self.bluetoothGraphToolbar = QtWidgets.QVBoxLayout()
        self.bluetoothGraphToolbar.setObjectName("bluetoothGraphToolbar")
        self.verticalLayout_6.addLayout(self.bluetoothGraphToolbar)
        self.line_5 = QtWidgets.QFrame(self.widget)
        self.line_5.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_5.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_5.setObjectName("line_5")
        self.verticalLayout_6.addWidget(self.line_5)
        self.verticalLayout_8.addLayout(self.verticalLayout_6)
        self.verticalLayout_7.addWidget(self.widget)
        self.tabWidget.addTab(self.graphTab, "")
        self.devicesTab = QtWidgets.QWidget()
        self.devicesTab.setObjectName("devicesTab")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.devicesTab)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.label_11 = QtWidgets.QLabel(self.devicesTab)
        self.label_11.setObjectName("label_11")
        self.verticalLayout_3.addWidget(self.label_11)
        self.wifiTable = QtWidgets.QTableWidget(self.devicesTab)
        self.wifiTable.setObjectName("wifiTable")
        self.wifiTable.setColumnCount(8)
        self.wifiTable.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.wifiTable.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.wifiTable.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.wifiTable.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.wifiTable.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.wifiTable.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.wifiTable.setHorizontalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.wifiTable.setHorizontalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        self.wifiTable.setHorizontalHeaderItem(7, item)
        self.wifiTable.horizontalHeader().setCascadingSectionResizes(True)
        self.wifiTable.horizontalHeader().setDefaultSectionSize(110)
        self.wifiTable.horizontalHeader().setStretchLastSection(True)
        self.wifiTable.verticalHeader().setStretchLastSection(False)
        self.verticalLayout_3.addWidget(self.wifiTable)
        self.line_7 = QtWidgets.QFrame(self.devicesTab)
        self.line_7.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_7.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_7.setObjectName("line_7")
        self.verticalLayout_3.addWidget(self.line_7)
        self.label_10 = QtWidgets.QLabel(self.devicesTab)
        self.label_10.setObjectName("label_10")
        self.verticalLayout_3.addWidget(self.label_10)
        self.line_8 = QtWidgets.QFrame(self.devicesTab)
        self.line_8.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_8.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_8.setObjectName("line_8")
        self.verticalLayout_3.addWidget(self.line_8)
        self.bluetoothTable = QtWidgets.QTableWidget(self.devicesTab)
        self.bluetoothTable.setObjectName("bluetoothTable")
        self.bluetoothTable.setColumnCount(6)
        self.bluetoothTable.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.bluetoothTable.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.bluetoothTable.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.bluetoothTable.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.bluetoothTable.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.bluetoothTable.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.bluetoothTable.setHorizontalHeaderItem(5, item)
        self.bluetoothTable.horizontalHeader().setCascadingSectionResizes(False)
        self.bluetoothTable.horizontalHeader().setDefaultSectionSize(110)
        self.bluetoothTable.horizontalHeader().setStretchLastSection(True)
        self.verticalLayout_3.addWidget(self.bluetoothTable)
        self.line_6 = QtWidgets.QFrame(self.devicesTab)
        self.line_6.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_6.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_6.setObjectName("line_6")
        self.verticalLayout_3.addWidget(self.line_6)
        self.tabWidget.addTab(self.devicesTab, "")
        self.optionsTab = QtWidgets.QWidget()
        self.optionsTab.setObjectName("optionsTab")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.optionsTab)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout()
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.formLayout = QtWidgets.QFormLayout()
        self.formLayout.setFieldGrowthPolicy(QtWidgets.QFormLayout.AllNonFixedFieldsGrow)
        self.formLayout.setObjectName("formLayout")
        self.showBluetoothServices = QtWidgets.QCheckBox(self.optionsTab)
        self.showBluetoothServices.setObjectName("showBluetoothServices")
        self.formLayout.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.showBluetoothServices)
        self.showBluetoothNames = QtWidgets.QCheckBox(self.optionsTab)
        self.showBluetoothNames.setChecked(True)
        self.showBluetoothNames.setObjectName("showBluetoothNames")
        self.formLayout.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.showBluetoothNames)
        self.label_2 = QtWidgets.QLabel(self.optionsTab)
        self.label_2.setObjectName("label_2")
        self.formLayout.setWidget(2, QtWidgets.QFormLayout.LabelRole, self.label_2)
        self.bluetoothRefreshRate = QtWidgets.QSpinBox(self.optionsTab)
        self.bluetoothRefreshRate.setMinimum(1)
        self.bluetoothRefreshRate.setMaximum(60)
        self.bluetoothRefreshRate.setSingleStep(1)
        self.bluetoothRefreshRate.setProperty("value", 1)
        self.bluetoothRefreshRate.setObjectName("bluetoothRefreshRate")
        self.formLayout.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.bluetoothRefreshRate)
        self.label_7 = QtWidgets.QLabel(self.optionsTab)
        self.label_7.setObjectName("label_7")
        self.formLayout.setWidget(3, QtWidgets.QFormLayout.LabelRole, self.label_7)
        self.wifiRefreshRate = QtWidgets.QSpinBox(self.optionsTab)
        self.wifiRefreshRate.setMinimum(1)
        self.wifiRefreshRate.setMaximum(60)
        self.wifiRefreshRate.setSingleStep(1)
        self.wifiRefreshRate.setProperty("value", 1)
        self.wifiRefreshRate.setObjectName("wifiRefreshRate")
        self.formLayout.setWidget(3, QtWidgets.QFormLayout.FieldRole, self.wifiRefreshRate)
        self.wifiSwitch = QtWidgets.QCheckBox(self.optionsTab)
        self.wifiSwitch.setEnabled(True)
        self.wifiSwitch.setChecked(False)
        self.wifiSwitch.setObjectName("wifiSwitch")
        self.formLayout.setWidget(6, QtWidgets.QFormLayout.LabelRole, self.wifiSwitch)
        self.bluetoothSwitch = QtWidgets.QCheckBox(self.optionsTab)
        self.bluetoothSwitch.setChecked(False)
        self.bluetoothSwitch.setObjectName("bluetoothSwitch")
        self.formLayout.setWidget(7, QtWidgets.QFormLayout.LabelRole, self.bluetoothSwitch)
        self.verticalLayout_4.addLayout(self.formLayout)
        self.verticalLayout_5.addLayout(self.verticalLayout_4)
        self.saveOptionsButtonBox = QtWidgets.QDialogButtonBox(self.optionsTab)
        self.saveOptionsButtonBox.setStandardButtons(QtWidgets.QDialogButtonBox.Save)
        self.saveOptionsButtonBox.setCenterButtons(True)
        self.saveOptionsButtonBox.setObjectName("saveOptionsButtonBox")
        self.verticalLayout_5.addWidget(self.saveOptionsButtonBox)
        self.verticalLayout_12 = QtWidgets.QVBoxLayout()
        self.verticalLayout_12.setObjectName("verticalLayout_12")
        self.verticalLayout_5.addLayout(self.verticalLayout_12)
        self.tabWidget.addTab(self.optionsTab, "")
        self.About = QtWidgets.QWidget()
        self.About.setObjectName("About")
        self.verticalLayout_9 = QtWidgets.QVBoxLayout(self.About)
        self.verticalLayout_9.setObjectName("verticalLayout_9")
        self.textEdit = QtWidgets.QTextEdit(self.About)
        self.textEdit.setObjectName("textEdit")
        self.verticalLayout_9.addWidget(self.textEdit)
        self.line_9 = QtWidgets.QFrame(self.About)
        self.line_9.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_9.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_9.setObjectName("line_9")
        self.verticalLayout_9.addWidget(self.line_9)
        self.label_6 = QtWidgets.QLabel(self.About)
        self.label_6.setObjectName("label_6")
        self.verticalLayout_9.addWidget(self.label_6)
        self.line_10 = QtWidgets.QFrame(self.About)
        self.line_10.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_10.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_10.setObjectName("line_10")
        self.verticalLayout_9.addWidget(self.line_10)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.textEdit_2 = QtWidgets.QTextEdit(self.About)
        self.textEdit_2.setObjectName("textEdit_2")
        self.horizontalLayout.addWidget(self.textEdit_2)
        self.textEdit_3 = QtWidgets.QTextEdit(self.About)
        self.textEdit_3.setEnabled(True)
        self.textEdit_3.setObjectName("textEdit_3")
        self.horizontalLayout.addWidget(self.textEdit_3)
        self.textEdit_4 = QtWidgets.QTextEdit(self.About)
        self.textEdit_4.setObjectName("textEdit_4")
        self.horizontalLayout.addWidget(self.textEdit_4)
        self.line_12 = QtWidgets.QFrame(self.About)
        self.line_12.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_12.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_12.setObjectName("line_12")
        self.horizontalLayout.addWidget(self.line_12)
        self.textEdit_5 = QtWidgets.QTextEdit(self.About)
        self.textEdit_5.setObjectName("textEdit_5")
        self.horizontalLayout.addWidget(self.textEdit_5)
        self.line_13 = QtWidgets.QFrame(self.About)
        self.line_13.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_13.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_13.setObjectName("line_13")
        self.horizontalLayout.addWidget(self.line_13)
        self.verticalLayout_9.addLayout(self.horizontalLayout)
        self.tabWidget.addTab(self.About, "")
        self.verticalLayout.addWidget(self.tabWidget)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 756, 22))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(4)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label_3.setText(_translate("MainWindow", "Wifi Adapter"))
        item = self.bluetoothAdapterTable.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Property"))
        item = self.bluetoothAdapterTable.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Value"))
        __sortingEnabled = self.bluetoothAdapterTable.isSortingEnabled()
        self.bluetoothAdapterTable.setSortingEnabled(False)
        item = self.bluetoothAdapterTable.item(0, 0)
        item.setText(_translate("MainWindow", "Vendor"))
        item = self.bluetoothAdapterTable.item(1, 0)
        item.setText(_translate("MainWindow", "MAC Address"))
        item = self.bluetoothAdapterTable.item(2, 0)
        item.setText(_translate("MainWindow", "API"))
        item = self.bluetoothAdapterTable.item(3, 0)
        item.setText(_translate("MainWindow", "Revision"))
        item = self.bluetoothAdapterTable.item(4, 0)
        item.setText(_translate("MainWindow", "Services"))
        item = self.bluetoothAdapterTable.item(5, 0)
        item.setText(_translate("MainWindow", "Class"))
        item = self.bluetoothAdapterTable.item(6, 0)
        item.setText(_translate("MainWindow", "Manufacturer"))
        self.bluetoothAdapterTable.setSortingEnabled(__sortingEnabled)
        self.label.setText(_translate("MainWindow", "Bluetooth Adapter"))
        item = self.wifiAdapterTable.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Property"))
        item = self.wifiAdapterTable.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Value"))
        __sortingEnabled = self.wifiAdapterTable.isSortingEnabled()
        self.wifiAdapterTable.setSortingEnabled(False)
        item = self.wifiAdapterTable.item(0, 0)
        item.setText(_translate("MainWindow", "Vendor"))
        item = self.wifiAdapterTable.item(1, 0)
        item.setText(_translate("MainWindow", "MAC Address"))
        item = self.wifiAdapterTable.item(2, 0)
        item.setText(_translate("MainWindow", "API"))
        item = self.wifiAdapterTable.item(3, 0)
        item.setText(_translate("MainWindow", "Revision"))
        item = self.wifiAdapterTable.item(4, 0)
        item.setText(_translate("MainWindow", "Services"))
        item = self.wifiAdapterTable.item(5, 0)
        item.setText(_translate("MainWindow", "Class"))
        item = self.wifiAdapterTable.item(6, 0)
        item.setText(_translate("MainWindow", "Manufacturer"))
        self.wifiAdapterTable.setSortingEnabled(__sortingEnabled)
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.adapterTab), _translate("MainWindow", "Adapter Overview"))
        self.label_4.setText(_translate("MainWindow", "Wifi Devices"))
        self.label_5.setText(_translate("MainWindow", "Bluetooth Devices"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.graphTab), _translate("MainWindow", "Signal Graph"))
        self.label_11.setText(_translate("MainWindow", "WiFi Table"))
        self.wifiTable.setSortingEnabled(True)
        item = self.wifiTable.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Name"))
        item = self.wifiTable.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "MAC Address"))
        item = self.wifiTable.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "RSSI"))
        item = self.wifiTable.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "Frequency"))
        item = self.wifiTable.horizontalHeaderItem(4)
        item.setText(_translate("MainWindow", "Quality"))
        item = self.wifiTable.horizontalHeaderItem(5)
        item.setText(_translate("MainWindow", "Encryption Type"))
        item = self.wifiTable.horizontalHeaderItem(6)
        item.setText(_translate("MainWindow", "Mode of Device"))
        item = self.wifiTable.horizontalHeaderItem(7)
        item.setText(_translate("MainWindow", "Channel"))
        self.label_10.setText(_translate("MainWindow", "Bluetooth Table"))
        self.bluetoothTable.setSortingEnabled(True)
        item = self.bluetoothTable.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Device"))
        item = self.bluetoothTable.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "MAC Address"))
        item = self.bluetoothTable.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Signal Strength"))
        item = self.bluetoothTable.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "Major Class"))
        item = self.bluetoothTable.horizontalHeaderItem(4)
        item.setText(_translate("MainWindow", "Minor Class"))
        item = self.bluetoothTable.horizontalHeaderItem(5)
        item.setText(_translate("MainWindow", "Services"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.devicesTab), _translate("MainWindow", "Devices"))
        self.showBluetoothServices.setText(_translate("MainWindow", "Show bluetooth services"))
        self.showBluetoothNames.setText(_translate("MainWindow", "Show bluetooth names"))
        self.label_2.setText(_translate("MainWindow", "Bluetooth Device Refresh rate (sec)"))
        self.label_7.setText(_translate("MainWindow", "WiFi Device Refresh rate (sec)"))
        self.wifiSwitch.setText(_translate("MainWindow", "Turn Wifi on"))
        self.bluetoothSwitch.setText(_translate("MainWindow", "Turn Bluetooth on"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.optionsTab), _translate("MainWindow", "Options"))
        self.textEdit.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Ubuntu\'; font-size:11pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"justify\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:16pt; font-weight:600;\">About Signalum Desktop</span></p>\n"
"<p align=\"justify\" style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:16pt; font-weight:600;\"><br /></p>\n"
"<p align=\"justify\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><a href=\"https://bisoncorps.github.io/signalum-desktop/\"><span style=\" font-style:italic; text-decoration: underline; color:#f57900;\">Signalum Desktop</span></a> is the official desktop application surrounding the python <span style=\" font-weight:600; font-style:italic;\">signalum</span> library. It was created out of the neccessity of lack of a GUI tool that featured real-time simultaneous signal details of wifi and bluetooth signals.</p>\n"
"<p align=\"justify\" style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p align=\"justify\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><a href=\"https://github.com/bisoncorps/signalum-desktop\"><span style=\" text-decoration: underline; color:#f57900;\">Github</span></a></p>\n"
"<p align=\"justify\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><a href=\"https://github.com/bisoncorps/signalum-desktop/issues\"><span style=\" text-decoration: underline; color:#f57900;\">Report Issues</span></a></p>\n"
"<p align=\"justify\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><a href=\"https://bisoncorps.github.io/signalum/\"><span style=\" text-decoration: underline; color:#f57900;\">Python Library</span></a></p></body></html>"))
        self.label_6.setText(_translate("MainWindow", "Development Team"))
        self.textEdit_2.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Ubuntu\'; font-size:11pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"justify\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:600;\">Mmadu Manasseh</span></p>\n"
"<p align=\"justify\" style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-weight:600;\"><br /></p>\n"
"<p align=\"justify\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Python, React, C++ Developer</p>\n"
"<p align=\"justify\" style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p align=\"justify\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><a href=\"https://mensaah.github.io\"><span style=\" text-decoration: underline; color:#f57900;\">Website</span></a></p>\n"
"<p align=\"justify\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><a href=\"https://github.com/MensaaH\"><span style=\" text-decoration: underline; color:#f57900;\">Github</span></a></p></body></html>"))
        self.textEdit_3.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Ubuntu\'; font-size:11pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"justify\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:600;\">Diretnan Domnan</span></p>\n"
"<p align=\"justify\" style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-weight:600;\"><br /></p>\n"
"<p align=\"justify\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Python Developer and AI Engineer</p>\n"
"<p align=\"justify\" style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p align=\"justify\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><a href=\"https://diretnandomnan.webnode.com\"><span style=\" text-decoration: underline; color:#f57900;\">Website</span></a></p>\n"
"<p align=\"justify\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><a href=\"https://github.com/deven96\"><span style=\" text-decoration: underline; color:#f57900;\">Github</span></a></p></body></html>"))
        self.textEdit_4.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Ubuntu\'; font-size:11pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"justify\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:600;\">Wisdom Praise</span></p>\n"
"<p align=\"justify\" style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-weight:600;\"><br /></p>\n"
"<p align=\"justify\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Java, Android and React Developer</p>\n"
"<p align=\"justify\" style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p align=\"justify\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><a href=\"https://wizzywit.github.io\"><span style=\" text-decoration: underline; color:#f57900;\">Website</span></a></p>\n"
"<p align=\"justify\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><a href=\"https://github.com/wizzywit\"><span style=\" text-decoration: underline; color:#f57900;\">Github</span></a></p></body></html>"))
        self.textEdit_5.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Ubuntu\'; font-size:11pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"justify\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:600;\">Engr. Ajao Lukman</span></p>\n"
"<p align=\"justify\" style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-weight:600;\"><br /></p>\n"
"<p align=\"justify\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Engineer and Lead Technologist at Computer Engineering Department, Federal University Of Technology, Minna, Nigeria</p>\n"
"<p align=\"justify\" style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p align=\"justify\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><a href=\"contact\"><span style=\" text-decoration: underline; color:#f57900;\">Contact</span></a></p></body></html>"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.About), _translate("MainWindow", "About"))


